CREATE TABLE USER_INFO(
 USER_NO INT PRIMARY KEY AUTO_INCREMENT,
 ID VARCHAR(50) UNIQUE NOT NULL,
 PASSWORD VARCHAR(300) NOT NULL,
 NAME VARCHAR(50) NOT NULL,
 PHONE VARCHAR(50),
 EMAIL VARCHAR(100),
 DEPT_NAME VARCHAR(50), -- 국내팀, 해외팀, 예약팀
 POSITION VARCHAR(50)    -- 사원, 대리, 과장
);

CREATE TABLE PROJECT (
 PRO_NO INT AUTO_INCREMENT PRIMARY KEY,
 PRO_NAME VARCHAR(100) NOT NULL,     -- "제주도 3박4일 패키지"
 PRO_DESC VARCHAR(100),           -- 프로젝트 상세 내용
 START_DATE DATE DEFAULT (CURRENT_DATE),
 END_DATE DATE,
 STATUS VARCHAR(20) CHECK(STATUS IN ('기획중', '판매중', '폐기','완료')),
 USER_NO INT                      -- 담당자 FK user_info
);



CREATE TABLE PROJECT_MEMBERS(
	MEMBER_NO INT AUTO_INCREMENT PRIMARY KEY,
    USER_NO INT,	-- FK user_info
    PRO_NO INT,		-- FK project
    ROLE VARCHAR(50)
);


CREATE TABLE PROJECT_TASKS(
 TASK_NO INT AUTO_INCREMENT PRIMARY KEY,
 TASK_NAME VARCHAR(100) NOT NULL,             -- "숙박업체 섭외", "일정표 작성"
 STATUS VARCHAR(20) CHECK(STATUS IN ('대기', '진행중', '완료')),
 START_DATE DATE,
 END_DATE DATE,
 PRO_NO INT,
 USER_NO INT                -- 담당자 FK user_info
);


CREATE TABLE PACKAGE(
  PACKAGE_NO INT AUTO_INCREMENT PRIMARY KEY,
  PACKAGE_NAME VARCHAR(100) NOT NULL,
  PACKAGE_DESC TEXT,
  DESTINATION VARCHAR(100),
  DURATION_DAYS INT, -- 여행 일수
  PRICE_ADULT INT, -- 성인 가격
  PRICE_CHILD INT, -- 아동 가격
  PRICE_INFANT INT, -- 유아 가격
  MIN_PARTICIPANTS INT, -- 최소 출발 인원
  MAX_PARTICIPANTS INT, -- 최대 출발 인원
  INCLUDE_FLIGHT BOOLEAN DEFAULT FALSE, -- 항공료 포함 여부
  INCLUDE_HOTEL BOOLEAN DEFAULT FALSE, -- 숙박료 포함 여부
  INCLUDE_MEAL BOOLEAN DEFAULT FALSE, -- 식사 포함 여부
  STATUS VARCHAR(20) CHECK(STATUS IN ('판매중', '판매중단', '시즌종료')),
  CREATE_DATE DATETIME DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE BOOKING(
 BOOKING_NO INT AUTO_INCREMENT PRIMARY KEY,
 ADULT_COUNT INT,                   -- 성인 인원수
 CHILD_COUNT INT,                   -- 아동 인원수
 INFANT_COUNT INT,                  -- 유아 인원수
 -- TOTAL_AMOUNT INT,			        -- 총 금액 
 PAYMENT_STATUS VARCHAR(20) CHECK(PAYMENT_STATUS IN ('대기', '완료')),
 BOOKING_STATUS VARCHAR(20) CHECK(BOOKING_STATUS IN ('예약', '완료', '취소')),
 CREATE_DATE DATETIME DEFAULT (CURRENT_TIMESTAMP),
 CUSTOMER_NO INT,
 PACKAGE_NO INT
);


CREATE TABLE SCHEDULE(
 SCHEDULE_NO INT AUTO_INCREMENT PRIMARY KEY,
 TITLE VARCHAR(100) NOT NULL,
 START_DATE DATETIME,
 END_DATE DATETIME,
 LOCATION VARCHAR(100),
 SCHEDULE_TYPE VARCHAR(30),          -- 회의, 고객미팅, 현지답사
 USER_NO INT                         -- 담당자 FK user_info
);



CREATE TABLE CUSTOMER(
 CUSTOMER_NO INT AUTO_INCREMENT PRIMARY KEY,
 NAME VARCHAR(100) NOT NULL,
 PHONE VARCHAR(20) NOT NULL,
 EMAIL VARCHAR(100),
 VIP_LEVEL VARCHAR(20) DEFAULT '일반', -- 일반, VIP
 USER_NO INT                        -- 담당 직원 FK user_info
);



CREATE TABLE CUSTOMER_INQUIRY(
 INQUIRY_NO INT AUTO_INCREMENT PRIMARY KEY,
 CUSTOMER_NO INT,
 TITLE VARCHAR(100),
 CONTENT TEXT,
 STATUS VARCHAR(20) CHECK(STATUS IN ('접수', '처리중', '완료')),
 CREATE_DATE DATETIME DEFAULT (CURRENT_TIMESTAMP),
 USER_NO INT                -- 담당 직원 FK user_info
);

ALTER TABLE project ADD FOREIGN KEY (user_no) REFERENCES user_info(user_no);
ALTER TABLE PROJECT_MEMBERS ADD FOREIGN KEY (USER_NO) REFERENCES user_info(USER_NO);
ALTER TABLE PROJECT_MEMBERS ADD FOREIGN KEY (PRO_NO) REFERENCES project(PRO_NO);
ALTER TABLE PROJECT_TASKS ADD FOREIGN KEY (USER_NO) REFERENCES user_info(USER_NO);
ALTER TABLE PROJECT_TASKS ADD FOREIGN KEY (PRO_NO) REFERENCES project(PRO_NO);
ALTER TABLE BOOKING ADD FOREIGN KEY (CUSTOMER_NO) REFERENCES customer(CUSTOMER_NO);
ALTER TABLE BOOKING ADD FOREIGN KEY (PACKAGE_NO) REFERENCES package(PACKAGE_NO);
ALTER TABLE SCHEDULE ADD FOREIGN KEY (USER_NO) REFERENCES user_info(USER_NO);
ALTER TABLE CUSTOMER ADD FOREIGN KEY (USER_NO) REFERENCES user_info(USER_NO);
ALTER TABLE CUSTOMER_INQUIRY ADD FOREIGN KEY (CUSTOMER_NO) REFERENCES customer(CUSTOMER_NO);
ALTER TABLE CUSTOMER_INQUIRY ADD FOREIGN KEY (USER_NO) REFERENCES user_info(USER_NO);


